// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameMinerSectorInfosV7 = "miner_sector_infos_v7"

// MinerSectorInfosV7 mapped from table <miner_sector_infos_v7>
type MinerSectorInfosV7 struct {
	MinerID               string  `gorm:"column:miner_id;type:text;primaryKey" json:"miner_id"`                                // Address of the miner who owns the sector.
	SectorID              int64   `gorm:"column:sector_id;type:bigint;primaryKey" json:"sector_id"`                            // Numeric identifier of the sector.
	StateRoot             string  `gorm:"column:state_root;type:text;primaryKey" json:"state_root"`                            // CID of the parent state root at this epoch.
	SealedCid             string  `gorm:"column:sealed_cid;type:text;not null" json:"sealed_cid"`                              // The root CID of the Sealed Sectorâ€™s merkle tree. Also called CommR, or "replica commitment".
	ActivationEpoch       *int64  `gorm:"column:activation_epoch;type:bigint" json:"activation_epoch"`                         // Epoch during which the sector proof was accepted.
	ExpirationEpoch       *int64  `gorm:"column:expiration_epoch;type:bigint" json:"expiration_epoch"`                         // Epoch during which the sector expires.
	DealWeight            float64 `gorm:"column:deal_weight;type:numeric;not null" json:"deal_weight"`                         // Integral of active deals over sector lifetime.
	VerifiedDealWeight    float64 `gorm:"column:verified_deal_weight;type:numeric;not null" json:"verified_deal_weight"`       // Integral of active verified deals over sector lifetime.
	InitialPledge         float64 `gorm:"column:initial_pledge;type:numeric;not null" json:"initial_pledge"`                   // Pledge collected to commit this sector (in attoFIL).
	ExpectedDayReward     float64 `gorm:"column:expected_day_reward;type:numeric;not null" json:"expected_day_reward"`         // Expected one day projection of reward for sector computed at activation time (in attoFIL).
	ExpectedStoragePledge float64 `gorm:"column:expected_storage_pledge;type:numeric;not null" json:"expected_storage_pledge"` // Expected twenty day projection of reward for sector computed at activation time (in attoFIL).
	Height                int64   `gorm:"column:height;type:bigint;primaryKey" json:"height"`                                  // Epoch at which this sector info was added/updated.
	SectorKeyCid          *string `gorm:"column:sector_key_cid;type:text" json:"sector_key_cid"`                               // SealedSectorCID is set when CC sector is snapped.
}

// TableName MinerSectorInfosV7's table name
func (*MinerSectorInfosV7) TableName() string {
	return TableNameMinerSectorInfosV7
}
