// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameMinerCurrentDeadlineInfo = "miner_current_deadline_infos"

// MinerCurrentDeadlineInfo mapped from table <miner_current_deadline_infos>
type MinerCurrentDeadlineInfo struct {
	Height        int64  `gorm:"column:height;type:bigint;primaryKey" json:"height"`               // Epoch at which this info was calculated.
	MinerID       string `gorm:"column:miner_id;type:text;primaryKey" json:"miner_id"`             // Address of the miner this info relates to.
	StateRoot     string `gorm:"column:state_root;type:text;primaryKey" json:"state_root"`         // CID of the parent state root at this epoch.
	DeadlineIndex int64  `gorm:"column:deadline_index;type:bigint;not null" json:"deadline_index"` // A deadline index, in [0..d.WPoStProvingPeriodDeadlines) unless period elapsed.
	PeriodStart   int64  `gorm:"column:period_start;type:bigint;not null" json:"period_start"`     // First epoch of the proving period (<= CurrentEpoch).
	Open          int64  `gorm:"column:open;type:bigint;not null" json:"open"`                     // First epoch from which a proof may be submitted (>= CurrentEpoch).
	Close         int64  `gorm:"column:close;type:bigint;not null" json:"close"`                   // First epoch from which a proof may no longer be submitted (>= Open).
	Challenge     int64  `gorm:"column:challenge;type:bigint;not null" json:"challenge"`           // Epoch at which to sample the chain for challenge (< Open).
	FaultCutoff   int64  `gorm:"column:fault_cutoff;type:bigint;not null" json:"fault_cutoff"`     // First epoch at which a fault declaration is rejected (< Open).
}

// TableName MinerCurrentDeadlineInfo's table name
func (*MinerCurrentDeadlineInfo) TableName() string {
	return TableNameMinerCurrentDeadlineInfo
}
