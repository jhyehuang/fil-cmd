// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameMessageGasEconomy = "message_gas_economy"

// MessageGasEconomy mapped from table <message_gas_economy>
type MessageGasEconomy struct {
	StateRoot           string   `gorm:"column:state_root;type:text;primaryKey" json:"state_root"`                             // CID of the parent state root at this epoch.
	GasLimitTotal       float64  `gorm:"column:gas_limit_total;type:numeric;not null" json:"gas_limit_total"`                  // The sum of all the gas limits.
	GasLimitUniqueTotal *float64 `gorm:"column:gas_limit_unique_total;type:numeric" json:"gas_limit_unique_total"`             // The sum of all the gas limits of unique messages.
	BaseFee             float64  `gorm:"column:base_fee;type:numeric;not null" json:"base_fee"`                                // The set price per unit of gas (measured in attoFIL/gas unit) to be burned (sent to an unrecoverable address) for every message execution.
	BaseFeeChangeLog    float64  `gorm:"column:base_fee_change_log;type:double precision;not null" json:"base_fee_change_log"` // The logarithm of the change between new and old base fee.
	GasFillRatio        *float64 `gorm:"column:gas_fill_ratio;type:double precision" json:"gas_fill_ratio"`                    // The gas_limit_total / target gas limit total for all blocks.
	GasCapacityRatio    *float64 `gorm:"column:gas_capacity_ratio;type:double precision" json:"gas_capacity_ratio"`            // The gas_limit_unique_total / target gas limit total for all blocks.
	GasWasteRatio       *float64 `gorm:"column:gas_waste_ratio;type:double precision" json:"gas_waste_ratio"`                  // (gas_limit_total - gas_limit_unique_total) / target gas limit total for all blocks.
	Height              int64    `gorm:"column:height;type:bigint;primaryKey" json:"height"`                                   // Epoch these economics apply to.
}

// TableName MessageGasEconomy's table name
func (*MessageGasEconomy) TableName() string {
	return TableNameMessageGasEconomy
}
